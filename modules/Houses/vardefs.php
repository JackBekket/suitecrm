<?php
if(!defined('sugarEntry') || !sugarEntry) die('Not A Valid Entry Point');

$dictionary["House"] = array (
    'table' => 'houses',
    'audited' => true,
    'fields' => array (
        'type' => array (
            'name'     => 'type',
            'type'     => 'enum',
            'vname'    => 'LBL_TYPE',
            'options'  => 'houses_types_dom',
            'len'      => '60',
            'required' => true,
            'audited'  => true,
        ),
        'service_start_date' => array (
          'name'     => 'service_start_date',
          'type'     => 'date',
          'vname'    => 'LBL_SERVICE_START_DATE',
          'len'      => '30',
          'required' => false,
          'audited'  => true,
          ),
        'region' => array (
            'name'     => 'region',
            'type'     => 'varchar',
            'vname'    => 'LBL_REGION',
            'len'      => '255',
            'required' => false,
            'audited'  => true,
        ),
        'city' => array (
            'name'     => 'city',
            'type'     => 'varchar',
            'vname'    => 'LBL_CITY',
            'len'      => '255',
            'required' => false,
            'audited'  => true,
        ),
        'street' => array (
            'name'     => 'street',
            'type'     => 'varchar',
            'vname'    => 'LBL_STREET',
            'len'      => '255',
            'required' => true,
            'audited'  => true,
        ),
        'house' => array (
            'name'     => 'house',
            'type'     => 'varchar',
            'vname'    => 'LBL_HOUSE',
            'len'      => '255',
            'required' => true,
            'audited'  => true,
        ),
        'serialnum' => array (
          'name'     => 'serialnum',
          'type'     => 'varchar',
          'vname'    => 'LBL_SERIALNUM',
          'len'      => '30',
          'required' => false,
          'audited'  => true,
          ),
        'build_date' => array (
          'name'     => 'build_date',
          'type'     => 'date',
          'vname'    => 'LBL_BUILD_DATE',
          'len'      => '30',
          'required' => false,
          'audited'  => true,
          ),
        'start_date' => array (
          'name'     => 'start_date',
          'type'     => 'date',
          'vname'    => 'LBL_START_DATE',
          'len'      => '30',
          'required' => false,
          'audited'  => true,
          ),
        'stages_max' => array (
          'name'     => 'stages_max',
          'type'     => 'int',
          'vname'    => 'LBL_STAGES_MAX',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0', 'max' => '500'),
          ),
        'stages_min' => array (
          'name'     => 'stages_min',
          'type'     => 'int',
          'vname'    => 'LBL_STAGES_MIN',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0', 'max' => '500'),
          ),
        'living_premises' => array (
          'name'     => 'living_premises',
          'type'     => 'int',
          'vname'    => 'LBL_LIVING_PREMISES',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0', 'max' => '5000'),
          ),
        'nonliving_premises' => array (
          'name'     => 'nonliving_premises',
          'type'     => 'int',
          'vname'    => 'LBL_NONLIVING_PREMISES',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0', 'max' => '5000'),
          ),
        'heating' =>
        array (
          'name' => 'heating',
          'vname' => 'LBL_HEATING',
          'type' => 'enum',
          'options' => 'heating_dom',
          'len' => 100,
          'importable' => 'required',
        ),
        'sewarage' =>
        array (
          'name' => 'sewarage',
          'vname' => 'LBL_SEWARAGE',
          'type' => 'enum',
          'options' => 'sewarage_dom',
          'len' => 100,
          'importable' => 'required',
        ),
        'cold_water_supply' =>
        array (
          'name' => 'cold_water_supply',
          'vname' => 'LBL_COLD_WATER_SUPPLY',
          'type' => 'enum',
          'options' => 'cold_water_supply_dom',
          'len' => 100,
          'importable' => 'required',
        ),
        'hot_water_supply' =>
        array (
          'name' => 'hot_water_supply',
          'vname' => 'LBL_HOT_WATER_SUPPLY',
          'type' => 'enum',
          'options' => 'hot_water_supply_dom',
          'len' => 100,
          'importable' => 'required',
        ),
        'water_heater_type' =>
        array (
          'name' => 'water_heater_type',
          'vname' => 'LBL_WATER_HEATER_TYPES',
          'type' => 'enum',
          'options' => 'water_heater_types_dom',
          'len' => 100,
          'importable' => 'required',
        ),
        'gas_supply' =>
        array (
          'name' => 'gas_supply',
          'vname' => 'LBL_GAS_SUPPLY',
          'type' => 'enum',
          'options' => 'gas_supply_types_dom',
          'len' => 100,
          'importable' => 'required',
        ),
        'cooker_type' =>
        array (
          'name' => 'cooker_type',
          'vname' => 'LBL_COOKER_TYPE',
          'type' => 'enum',
          'options' => 'cooker_types_dom',
          'len' => 100,
          'importable' => 'required',
        ),
        'bath_presence' =>
        array (
          'name' => 'bath_presence',
          'vname' => 'LBL_BATH_PRESENCE',
          'type' => 'enum',
          'options' => 'presence_dom',
          'len' => 100,
          'importable' => 'required',
        ),
        'rubbish_chute_presence' =>
        array (
          'name' => 'rubbish_chute_presence',
          'vname' => 'LBL_RUBBISH_CHUTE_PRESENCE',
          'type' => 'enum',
          'options' => 'presence_dom',
          'len' => 100,
          'importable' => 'required',
        ),
        'house_area' => array (
          'name'     => 'house_area',
          'type'     => 'float',
          'dbType'   => 'double',
          'vname'    => 'LBL_HOUSE_AREA',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0'),
          ),
        'living_premises_area' => array (
          'name'     => 'living_premises_area',
          'type'     => 'float',
          'dbType'   => 'double',
          'vname'    => 'LBL_LIVING_PREMISES_AREA',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0'),
          ),
        'nonliving_premises_area' => array (
          'name'     => 'nonliving_premises_area',
          'type'     => 'float',
          'dbType'   => 'double',
          'vname'    => 'LBL_NONLIVING_PREMISES_AREA',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0'),
          ),
        'total_premises_area' => array (
          'name'     => 'total_premises_area',
          'type'     => 'float',
          'dbType'   => 'double',
          'vname'    => 'LBL_TOTAL_PREMISES_AREA',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0'),
          ),
        'total_property_area' => array (
          'name'     => 'total_property_area',
          'type'     => 'float',
          'dbType'   => 'double',
          'vname'    => 'LBL_TOTAL_PROPERTY_AREA',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0'),
          ),
        'living_house_type' => array (
            'name'     => 'living_house_type',
            'type'     => 'enum',
            'vname'    => 'LBL_TYPE',
            'options'  => 'living_houses_types_dom',
            'len'      => '60',
            'required' => true,
            'audited'  => true,
        ),
        'fundation_type' => array (
            'name'     => 'fundation_type',
            'type'     => 'enum',
            'vname'    => 'LBL_FUNDATION_TYPE',
            'options'  => 'fundation_types_dom',
            'len'      => '60',
            'required' => true,
            'audited'  => true,
        ),
        'wall_material' => array (
            'name'     => 'wall_material',
            'type'     => 'enum',
            'vname'    => 'LBL_WALL_MATERIAL',
            'options'  => 'wall_materials_dom',
            'len'      => '60',
            'required' => true,
            'audited'  => true,
        ),
        'overlap_material' => array (
            'name'     => 'overlap_material',
            'type'     => 'enum',
            'vname'    => 'LBL_OVERLAP_MATERIAL',
            'options'  => 'overlap_materials_dom',
            'len'      => '60',
            'required' => true,
            'audited'  => true,
        ),
        'roof_material' => array (
            'name'     => 'roof_material',
            'type'     => 'varchar',
            'vname'    => 'LBL_ROOF_MATERIAL',
            'len'      => '255',
            'required' => true,
            'audited'  => true,
        ),
        'overhaul_date' => array (
          'name'     => 'overhaul_date',
          'type'     => 'date',
          'vname'    => 'LBL_OVERHAUL_DATE',
          'len'      => '30',
          'required' => false,
          'audited'  => true,
          ),
        'lifts_count' => array (
          'name'     => 'lifts_count',
          'type'     => 'int',
          'vname'    => 'LBL_LIFTS_COUNT',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0', 'max' => '5000'),
          ),
        'accounts_count' => array (
          'name'     => 'accounts_count',
          'type'     => 'int',
          'vname'    => 'LBL_ACCOUNTS_COUNT',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0', 'max' => '5000'),
          ),
        'residents_count' => array (
          'name'     => 'residents_count',
          'type'     => 'int',
          'vname'    => 'LBL_RESIDENTS_COUNT',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0', 'max' => '5000'),
          ),
        'wear_house' => array (
          'name'     => 'wear_house',
          'type'     => 'int',
          'vname'    => 'LBL_WEAR_HOUSE',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0', 'max' => '100'),
          ),
        'wear_fundation' => array (
          'name'     => 'wear_fundation',
          'type'     => 'int',
          'vname'    => 'LBL_WEAR_FUNDATION',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0', 'max' => '100'),
          ),
        'wear_walls' => array (
          'name'     => 'wear_walls',
          'type'     => 'int',
          'vname'    => 'LBL_WEAR_WALLS',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0', 'max' => '100'),
          ),
        'wear_overlaps' => array (
          'name'     => 'wear_overlaps',
          'type'     => 'int',
          'vname'    => 'LBL_WEAR_OVERLAPS',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0', 'max' => '100'),
          ),
        'inventorynum' => array (
          'name'     => 'inventorynum',
          'type'     => 'varchar',
          'vname'    => 'LBL_INVENTORYNUM',
          'len'      => '30',
          'required' => false,
          'audited'  => true,
          ),
        'cadastralnum' => array (
          'name'     => 'cadastralnum',
          'type'     => 'varchar',
          'vname'    => 'LBL_CADASTRALNUM',
          'len'      => '30',
          'required' => false,
          'audited'  => true,
          ),
        'yard_area' => array (
          'name'     => 'yard_area',
          'type'     => 'float',
          'dbType'   => 'double',
          'vname'    => 'LBL_YARD_AREA',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0'),
          ),
        'territory_area' => array (
          'name'     => 'territory_area',
          'type'     => 'float',
          'dbType'   => 'double',
          'vname'    => 'LBL_TERRITORY_AREA',
          'len'      => '5',
          'required' => false,
          'audited'  => true,
          'validation' => array ('type' => 'range', 'min' => '0'),
          ),
        'house_specifications' => array (
            'name'     => 'house_specifications',
            'type'   => 'text',
            'vname'    => 'LBL_HOUSE_SPECIFICATIONS',
            'cols' => 50,
            'rows' => 6,
            'required' => false,
            'audited'  => true,
        ),
    ),
    'relationships' => array (
    ),
    'optimistic_lock' => true,
);

require_once('include/SugarObjects/VardefManager.php');
VardefManager::createVardef('Houses', 'House', array('basic', 'assignable'));
?>
